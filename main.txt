import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        primarySwatch: Colors.blue,
      ),
      home: const MyHomePage(),
    );
  }
}

class MyHomePage extends StatefulWidget {
  const MyHomePage({
    Key? key,
  }) : super(key: key);

  @override
  State<MyHomePage> createState() => _MyHomePageState();
}

class _MyHomePageState extends State<MyHomePage> {
  final emailController = TextEditingController();
  final passwordController = TextEditingController();
  final emailkey = GlobalKey<FormFieldState>();
  final passwordkey = GlobalKey<FormFieldState>();
  @override
  Widget build(BuildContext context) {
    return Scaffold(
        appBar: AppBar(
          title: Text('Cas Developers'),
        ),
        body: Center(
          child: Column(mainAxisAlignment: MainAxisAlignment.center, children: [
            TextFormField(
              key: emailkey,
              validator: ((value) {
                if (value!.isEmpty || value == null) {
                  return 'Enter the value';
                }
              }),
              decoration: InputDecoration(
                  label: Text('Email'), hintText: "Enter your Email"),
            ),
            TextFormField(
              key: passwordkey,
              validator: ((value) {
                if (value!.isEmpty || value == null) {
                  return 'Enter the value';
                }
              }),
              decoration: InputDecoration(
                  label: Text('Password'), hintText: "Enter your Password"),
            ),
            SizedBox.square(dimension: 22),
            SizedBox(
                width: 200,
                child: ElevatedButton(
                    onPressed: () {
                      if (emailkey.currentState!.validate()) {
                        String emailfor = emailController.text;
                        isEmailValidate(emailfor)
                            ? ""
                            : 'Enter the Valid value again';
                      }
                      if (passwordkey.currentState!.validate()) {
                        String passwordfor = passwordController.text;
                        isPasswordValidate(passwordfor)
                            ? ''
                            : 'Enter the valid value again';
                      }
                    },
                    child: Icon(Icons.add))),
          ]),
        ));
  }

  bool isEmailValidate(String email) {
    String pattern = '\S+@\S+\.\S+';
    RegExp exp = RegExp(pattern);
    return exp.hasMatch(email);
  }

  bool isPasswordValidate(String password) {
    String pattern = '\S+@\S+\.\S+';
    RegExp exp = RegExp(pattern);
    return exp.hasMatch(password);
  }
}
